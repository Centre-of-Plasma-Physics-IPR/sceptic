c*********************************************************************
c        Draw a vector to the plotter file, normalized coords   */
c New  version Apr 92. Compact file writing by lines.
      subroutine vecnp(nx,ny,ud)
      real nx,ny
      integer ud
      include 'plotcom.h'
c      integer updown in common set to 99 by blockdata or color.
      integer pldx,pldy
      integer plx,ply
      common /plcoord/ plx,ply

      character*4 pu,pd, spc, endpair
      character*17 postlude
      character*300 prelude
      integer nr,nu,nd,ns,ne,no
      common /pltfc/pu,pd,spc,endpair,postlude,prelude
      common /pltfi/nr,nu,nd,ns,ne,no

      pldx=250+10000*nx - plx
      pldy=250+10000*ny - ply
      plx=plx+pldx
      ply=ply+pldy
c postscript section
      if(pfsw.eq.2.or.pfsw.eq.3)then
	 if(updown.ne.ud)then
	    if(ud.eq.0)call abufwrt(endpair,ne,12)
	    updown=ud
	 endif
	 call ibufwrt(pldx,12)
	 call abufwrt(spc,ns,12)
	 call ibufwrt(pldy,12)
	 call abufwrt(spc,ns,12)
	 if(ud.ne.0)then
	    call abufwrt(pd,nd,12)
c	    updown=ud
	 else
	    call abufwrt(pu,nd,12)
	 endif
      else
	 if(ud.ne.updown)then
	    updown=ud
	    if(ud.ne.0)then
	       call abufwrt(pd,nd,12)
	    else
	       call abufwrt(pu,nu,12)
	    endif
	 else 
	    call abufwrt(endpair,ne,12)
	 endif
	 call ibufwrt(pldx,12)
	 call abufwrt(spc,ns,12)
	 call ibufwrt(pldy,12)
      endif
      return
      end

c*********************************************************************/
      subroutine inib(iunit,filen)
      integer iunit
      character*(*) filen
      integer sblen
      include 'plotcom.h'

      character*80 sbuf
      common /wbuf/sblen,sbuf
      integer plx,ply
      common /plcoord/ plx,ply

      character*4 pu,pd, spc,endpair
      character*17 postlude
      character*300 prelude
      integer nr,nu,nd,ns,ne,no
      common /pltfc/pu,pd,spc,endpair,postlude,prelude
      common /pltfi/nr,nu,nd,ns,ne,no
      character*1521 ca
      character*2 crlf
      parameter (crlf=' \')
c See lnswrt below for the end-of line character definition here.
c g77 is incapable of handling non-printable characters properly.
      common /cacom/ca

      data ca(00001:00023)/'%!PS-Adobe-2.0 EPSF-2.0'/
      data ca(00024:00025)/crlf/
      data ca(00026:00053)/'%%BoundingBox: 28 28 575 762'/
      data ca(00054:00055)/crlf/
      data ca(00056:00097)/'/SP1  { 8 setlinewidth 0.000 0.000 0.000 s'/
      data ca(00098:00113)/'etrgbcolor } def'/
      data ca(00114:00115)/crlf/
      data ca(00116:00157)/'/SP2  { 8 setlinewidth 0.000 0.000 0.500 s'/
      data ca(00158:00173)/'etrgbcolor } def'/
      data ca(00174:00175)/crlf/
      data ca(00176:00217)/'/SP3  { 8 setlinewidth 0.000 0.500 0.000 s'/
      data ca(00218:00233)/'etrgbcolor } def'/
      data ca(00234:00235)/crlf/
      data ca(00236:00277)/'/SP4  { 8 setlinewidth 0.000 0.500 0.500 s'/
      data ca(00278:00293)/'etrgbcolor } def'/
      data ca(00294:00295)/crlf/
      data ca(00296:00337)/'/SP5  { 8 setlinewidth 0.500 0.000 0.000 s'/
      data ca(00338:00353)/'etrgbcolor } def'/
      data ca(00354:00355)/crlf/
      data ca(00356:00397)/'/SP6  { 8 setlinewidth 0.500 0.000 0.500 s'/
      data ca(00398:00413)/'etrgbcolor } def'/
      data ca(00414:00415)/crlf/
      data ca(00416:00457)/'/SP7  { 8 setlinewidth 0.500 0.500 0.000 s'/
      data ca(00458:00473)/'etrgbcolor } def'/
      data ca(00474:00475)/crlf/
      data ca(00476:00517)/'/SP8  { 8 setlinewidth 0.700 0.700 0.700 s'/
      data ca(00518:00533)/'etrgbcolor } def'/
      data ca(00534:00535)/crlf/
      data ca(00536:00577)/'/SP9  { 8 setlinewidth 0.300 0.300 0.300 s'/
      data ca(00578:00593)/'etrgbcolor } def'/
      data ca(00594:00595)/crlf/
      data ca(00596:00637)/'/SP10 { 8 setlinewidth 0.000 0.000 1.000 s'/
      data ca(00638:00653)/'etrgbcolor } def'/
      data ca(00654:00655)/crlf/
      data ca(00656:00697)/'/SP11 { 8 setlinewidth 0.000 1.000 0.000 s'/
      data ca(00698:00713)/'etrgbcolor } def'/
      data ca(00714:00715)/crlf/
      data ca(00716:00757)/'/SP12 { 8 setlinewidth 0.000 1.000 1.000 s'/
      data ca(00758:00773)/'etrgbcolor } def'/
      data ca(00774:00775)/crlf/
      data ca(00776:00817)/'/SP13 { 8 setlinewidth 1.000 0.000 0.000 s'/
      data ca(00818:00833)/'etrgbcolor } def'/
      data ca(00834:00835)/crlf/
      data ca(00836:00877)/'/SP14 { 8 setlinewidth 1.000 0.000 1.000 s'/
      data ca(00878:00893)/'etrgbcolor } def'/
      data ca(00894:00895)/crlf/
      data ca(00896:00937)/'/SP15 { 8 setlinewidth 1.000 1.000 0.000 s'/
      data ca(00938:00953)/'etrgbcolor } def'/
      data ca(00954:00955)/crlf/
      data ca(00956:00976)/'/D    { rlineto } def'/
      data ca(00977:00978)/crlf/
      data ca(00979:00999)/'/M    { rmoveto } def'/
      data ca(01000:01001)/crlf/
      data ca(01002:01021)/'/MT   { moveto } def'/
      data ca(01022:01023)/crlf/
      data ca(01024:01062)/'/ST   { currentpoint stroke moveto} def'/
      data ca(01063:01064)/crlf/
      data ca(01065:01106)/'/LS   { exch dup 3 1 roll mul exch 8 div ['/
      data ca(01107:01122)/' exch dup } def '/
      data ca(01123:01124)/crlf/
      data ca(01125:01150)/'/LM   { mul exch dup } def'/
      data ca(01151:01152)/crlf/
      data ca(01153:01194)/'/LE   { mul exch pop ] exch setdash } def '/
      data ca(01195:01196)/crlf/
      data ca(01197:01224)/'/LT   { [ ] 0 setdash } def '/
      data ca(01225:01226)/crlf/
      data ca(01227:01252)/'/LT1  { LS 0 LM 8 LE } def'/
      data ca(01253:01254)/crlf/
      data ca(01255:01280)/'/LT2  { LS 4 LM 4 LE } def'/
      data ca(01281:01282)/crlf/
      data ca(01283:01308)/'/LT3  { LS 6 LM 2 LE } def'/
      data ca(01309:01310)/crlf/
      data ca(01311:01346)/'/LT4  { LS 6 LM 1 LM 0 LM 1 LE } def'/
      data ca(01347:01348)/crlf/
      data ca(01349:01384)/'/LT5  { LS 5 LM 1 LM 1 LM 1 LE } def'/
      data ca(01385:01386)/crlf/
      data ca(01387:01428)/'/LT6  { LS 3 LM 1 LM 1 LM 1 LM 1 LM 1 LE }'/
      data ca(01429:01432)/' def'/
      data ca(01433:01434)/crlf/
      data ca(01435:01476)/'gsave 1 setlinecap 1 setlinejoin  72 1016 '/
      data ca(01477:01507)/'div dup scale 426 426 translate'/
      data ca(01508:01509)/crlf/
      data ca(01510:01521)/'SP1 0 0 MT '/
      
      open(unit=iunit,FILE=filen,status='unknown')
      sblen=1
      if(pfsw.eq.1)then
	 pu=';PU'
	 nu=3
	 pd=';PD'
	 nd=3
	 spc=','
	 ns=1
	 endpair=','
	 ne=1
	 postlude=';PG'//char(26)
	 no=4
c	 prelude= ' IN;SP1;PU0,0;PR;'   Caused rotation problem on hplj4.
	 prelude= '   ;SP1;PU0,0;PR;'
c        move plot pen to (0,0), switch to relative plotting.
	 nr=17
	 call abufwrt(prelude,nr,iunit)
         updown=99
      else
	 pu='M '
	 nu=2
	 pd='D '
	 nd=2
	 spc=' '
	 ns=1
	 endpair='ST '
	 ne=3
	 if(pfsw.eq.3)then
	    ca(00026:00053)='%%BoundingBox: 30 30 620 480'
	    postlude='grestore'
	    no=8
	 elseif(pfsw.eq.2)then
	    ca(00026:00053)='%%BoundingBox: 28 28 575 762'
	    postlude='showpage grestore'
	    no=17
	 endif
	 call lnswrt(iunit,ca,1521,'\',2)
	 if(pfsw.eq.2)then
c Landscape, postscript.
	    write(iunit,*)' 8000  0 translate 90 rotate 0 0 MT'
            write(iunit,'(a)')'%%EndProlog'
            write(iunit,'(a)')'%%PageOrientation: Landscape'
	 elseif(pfsw.eq.3)then
           write(iunit,*)' 0.8 dup scale'
         endif
         updown=0
      endif
      plx=0
      ply=0
      return
      end
c*********************************************************************/
      subroutine flushb(iunit)
      integer iunit
      integer sblen
      character*80 sbuf
      common /wbuf/sblen,sbuf

      character*4 pu,pd, spc, endpair
      character*17 postlude
      character*300 prelude
      integer nr,nu,nd,ns,ne,no
      common /pltfc/pu,pd,spc,endpair,postlude,prelude
      common /pltfi/nr,nu,nd,ns,ne,no

      if(sblen.gt.1)write(iunit,*)sbuf(1:sblen-1)
      write(iunit,*)postlude
      endfile(iunit)
      close(iunit)
      end
c********************************************************************
c Fill the path just drawn. A path is a set of vectors all drawn with
c pen down one after the other. The vecfill is dummy except for X11.
      subroutine pathfill()
      include 'plotcom.h'
      call vecfill()
      if(pfsw .eq. 2 .or. pfsw .eq. 3)
     $     call abufwrt(' false upath ufill ',19,12)
      end

C********************************************************************
